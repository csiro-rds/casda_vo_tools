apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'

//exclude generated files from code quality tools
def excludePattern = '/au/csiro/casda/votools/jaxb/'
def excludePatternAntStyle = '**' + excludePattern + '**'
tasks.withType(FindBugs) {
    classes = classes.filter {
        !it.path.contains(excludePattern)
    }
}
tasks.withType(Checkstyle) {
    exclude excludePatternAntStyle
}
tasks.withType(Pmd) {
    exclude excludePatternAntStyle
}

checkstyle {
    toolVersion = "5.9"
    ignoreFailures = true
    configProperties.putAt("projectDir", projectDir)
}

findbugs {
    toolVersion = "3.0.0"
    ignoreFailures = true
    reportLevel = "high"
    findbugsMain {
        reports {
            // We need xml on Jenkins but sometimes its useful to get an html report locally for working our what's wrong
            // In that case. Change the xml.enabled to false and html.enabled to true
            xml.enabled = true
            html.enabled = false
        }
    }
    findbugsTest {
        reports {
            // We need xml on Jenkins but sometimes its useful to get an html report locally for working our what's wrong
            // In that case. Change the xml.enabled to false and html.enabled to true
            xml.enabled = true
            html.enabled = false
        }
    }
  
}

pmd {
    toolVersion = "5.1.3"
    ignoreFailures = true
    // turn off the default rules
    ruleSets = []
    pmdMain() {
        // only use the rules we define
        ruleSetFiles = files("config/pmd/pmdRules.xml", "config/pmd/pmdRulesMain.xml")
    } 
    pmdTest() {
        // only use shared rules and rules for test
        ruleSetFiles = files("config/pmd/pmdRules.xml", "config/pmd/pmdRulesTest.xml")
    }
}
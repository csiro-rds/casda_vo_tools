//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.08.12 at 12:39:04 PM EST 
//


package au.csiro.casda.votools.jaxb.stc;

/*
 * #%L
 * CSIRO ASKAP Science Data Archive
 * %%
 * Copyright (C) 2015 Commonwealth Scientific and Industrial Research Organisation (CSIRO) ABN 41 687 119 230.
 * %%
 * Licensed under the CSIRO Open Source License Agreement (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License in the LICENSE file.
 * #L%
 */


import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for velTimeUnitType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="velTimeUnitType">
 *   &lt;restriction base="{http://www.ivoa.net/xml/STC/stc-v1.30.xsd}unitType">
 *     &lt;enumeration value="s"/>
 *     &lt;enumeration value="h"/>
 *     &lt;enumeration value="d"/>
 *     &lt;enumeration value="a"/>
 *     &lt;enumeration value="yr"/>
 *     &lt;enumeration value="cy"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "velTimeUnitType")
@XmlEnum
public enum VelTimeUnitType {

    @XmlEnumValue("s")
    S("s"),
    @XmlEnumValue("h")
    H("h"),
    @XmlEnumValue("d")
    D("d"),
    @XmlEnumValue("a")
    A("a"),
    @XmlEnumValue("yr")
    YR("yr"),
    @XmlEnumValue("cy")
    CY("cy");
    private final String value;

    VelTimeUnitType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VelTimeUnitType fromValue(String v) {
        for (VelTimeUnitType c: VelTimeUnitType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

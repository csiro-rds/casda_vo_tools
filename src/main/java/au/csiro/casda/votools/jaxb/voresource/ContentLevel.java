//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.08.11 at 02:55:10 PM EST 
//


package au.csiro.casda.votools.jaxb.voresource;

/*
 * #%L
 * CSIRO ASKAP Science Data Archive
 * %%
 * Copyright (C) 2015 Commonwealth Scientific and Industrial Research Organisation (CSIRO) ABN 41 687 119 230.
 * %%
 * Licensed under the CSIRO Open Source License Agreement (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License in the LICENSE file.
 * #L%
 */


import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ContentLevel.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ContentLevel">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="General"/>
 *     &lt;enumeration value="Elementary Education"/>
 *     &lt;enumeration value="Middle School Education"/>
 *     &lt;enumeration value="Secondary Education"/>
 *     &lt;enumeration value="Community College"/>
 *     &lt;enumeration value="University"/>
 *     &lt;enumeration value="Research"/>
 *     &lt;enumeration value="Amateur"/>
 *     &lt;enumeration value="Informal Education"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ContentLevel")
@XmlEnum
public enum ContentLevel {


    /**
     * 
     *                Resource provides information appropriate for all users
     *              
     * 
     */
    @XmlEnumValue("General")
    GENERAL("General"),

    /**
     * 
     *                Resource provides information appropriate for use in elementary
     *                education (e.g. approximate ages 6-11)
     *              
     * 
     */
    @XmlEnumValue("Elementary Education")
    ELEMENTARY_EDUCATION("Elementary Education"),

    /**
     * 
     *                Resource provides information appropriate for use in middle
     *                school education (e.g. approximate ages 11-14)
     *              
     * 
     */
    @XmlEnumValue("Middle School Education")
    MIDDLE_SCHOOL_EDUCATION("Middle School Education"),

    /**
     * 
     *                Resource provides information appropriate for use in elementary
     *                education (e.g. approximate ages 14-18)
     *              
     * 
     */
    @XmlEnumValue("Secondary Education")
    SECONDARY_EDUCATION("Secondary Education"),

    /**
     * 
     *                Resource provides information appropriate for use in 
     *                community/junior college or early university education.
     *              
     * 
     */
    @XmlEnumValue("Community College")
    COMMUNITY_COLLEGE("Community College"),

    /**
     * 
     *                Resource provides information appropriate for use in
     *                university education
     *              
     * 
     */
    @XmlEnumValue("University")
    UNIVERSITY("University"),

    /**
     * 
     *                Resource provides information appropriate for
     *                supporting scientific research.
     *              
     * 
     */
    @XmlEnumValue("Research")
    RESEARCH("Research"),

    /**
     * 
     *                Resource provides information of interest to
     *                amateur astronomers.
     *              
     * 
     */
    @XmlEnumValue("Amateur")
    AMATEUR("Amateur"),

    /**
     * 
     *                Resource provides information appropriate for education
     *                at museums, planetariums, and other centers of informal learning.
     *              
     * 
     */
    @XmlEnumValue("Informal Education")
    INFORMAL_EDUCATION("Informal Education");
    private final String value;

    ContentLevel(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ContentLevel fromValue(String v) {
        for (ContentLevel c: ContentLevel.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
